// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace wyyybbb.Migrations
{
    [DbContext(typeof(VinylContext))]
    [Migration("20220318211137_v3cls")]
    partial class v3cls
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Models.IzdavackaKuca", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GodinaNastanka")
                        .HasColumnType("int");

                    b.Property<string>("Ime")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Website")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("IzdavackeKuce");
                });

            modelBuilder.Entity("Models.Izvodjac", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ime")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Prezime")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Izvodjaci");
                });

            modelBuilder.Entity("Models.Prodavac", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrojTelefona")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Ime")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("LicnaKarta")
                        .HasColumnType("int");

                    b.Property<string>("Prezime")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RadnoVreme")
                        .HasColumnType("int");

                    b.Property<int?>("prodavnicaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("prodavnicaID");

                    b.ToTable("Prodavci");
                });

            modelBuilder.Entity("Models.Prodavnica", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Mail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Naziv")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Prodavnice");
                });

            modelBuilder.Entity("Models.SpojProdavnicaPloca", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cena")
                        .HasColumnType("int");

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<int?>("plocaID")
                        .HasColumnType("int");

                    b.Property<int?>("prodavnicaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("plocaID");

                    b.HasIndex("prodavnicaID");

                    b.ToTable("ProdavnicaPloca");
                });

            modelBuilder.Entity("Models.Vinyl", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GodinaStampanja")
                        .HasColumnType("int");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Pesme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Zanr")
                        .HasColumnType("int");

                    b.Property<int?>("izdavackaKucaID")
                        .HasColumnType("int");

                    b.Property<int?>("izvodjacID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("izdavackaKucaID");

                    b.HasIndex("izvodjacID");

                    b.ToTable("Vinyl");
                });

            modelBuilder.Entity("Models.Prodavac", b =>
                {
                    b.HasOne("Models.Prodavnica", "prodavnica")
                        .WithMany("prodavci")
                        .HasForeignKey("prodavnicaID");

                    b.Navigation("prodavnica");
                });

            modelBuilder.Entity("Models.SpojProdavnicaPloca", b =>
                {
                    b.HasOne("Models.Vinyl", "ploca")
                        .WithMany("prodavnica")
                        .HasForeignKey("plocaID");

                    b.HasOne("Models.Prodavnica", "prodavnica")
                        .WithMany("ploce")
                        .HasForeignKey("prodavnicaID");

                    b.Navigation("ploca");

                    b.Navigation("prodavnica");
                });

            modelBuilder.Entity("Models.Vinyl", b =>
                {
                    b.HasOne("Models.IzdavackaKuca", "izdavackaKuca")
                        .WithMany("ploce")
                        .HasForeignKey("izdavackaKucaID");

                    b.HasOne("Models.Izvodjac", "izvodjac")
                        .WithMany("ploce")
                        .HasForeignKey("izvodjacID");

                    b.Navigation("izdavackaKuca");

                    b.Navigation("izvodjac");
                });

            modelBuilder.Entity("Models.IzdavackaKuca", b =>
                {
                    b.Navigation("ploce");
                });

            modelBuilder.Entity("Models.Izvodjac", b =>
                {
                    b.Navigation("ploce");
                });

            modelBuilder.Entity("Models.Prodavnica", b =>
                {
                    b.Navigation("ploce");

                    b.Navigation("prodavci");
                });

            modelBuilder.Entity("Models.Vinyl", b =>
                {
                    b.Navigation("prodavnica");
                });
#pragma warning restore 612, 618
        }
    }
}
